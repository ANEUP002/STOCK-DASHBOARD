{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Desktop/stock dashboard/frontend/src/stock.js\",\n  _s = $RefreshSig$();\n// src/components/Stock.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stock = ({\n  ticker\n}) => {\n  _s();\n  const [stockData, setStockData] = useState({\n    name: 'Loading...',\n    ticker: '',\n    price: 0,\n    volume: 0\n  });\n  const [chartData, setChartData] = useState({\n    labels: Array.from({\n      length: 10\n    }, (_, i) => `Time ${i}`),\n    datasets: []\n  });\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:31324/${ticker}`).then(response => {\n      if (response.data) {\n        const updatedStockData = {\n          name: response.data.name || 'N/A',\n          ticker: ticker,\n          price: parseFloat(response.data.price) || 0,\n          // Ensure price is a number\n          volume: parseInt(response.data.volume) || 0 // Ensure volume is an integer\n        };\n        setStockData(updatedStockData);\n        const data = {\n          labels: Array.from({\n            length: 10\n          }, (_, i) => `Time ${i}`),\n          datasets: [{\n            label: `Price of ${updatedStockData.name}`,\n            data: Array.from({\n              length: 10\n            }, () => updatedStockData.price),\n            fill: false,\n            backgroundColor: 'rgb(75, 192, 192)',\n            borderColor: 'rgba(75, 192, 192, 0.2)'\n          }]\n        };\n        setChartData(data);\n      } else {\n        throw new Error(\"Invalid data received from API\");\n      }\n    }).catch(error => {\n      console.error('Error fetching stock data:', error);\n      setStockData({\n        name: 'Error',\n        ticker: ticker,\n        price: 0,\n        volume: 0\n      });\n    });\n  }, [ticker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [stockData.name, \" (\", stockData.ticker, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: $\", stockData.price.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Volume: \", stockData.volume.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), chartData.datasets.length > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Stock, \"JgmOGwfrj3CX3NkKFeoD+JoHq94=\");\n_c = Stock;\nexport default Stock;\nvar _c;\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","jsxDEV","_jsxDEV","Stock","ticker","_s","stockData","setStockData","name","price","volume","chartData","setChartData","labels","Array","from","length","_","i","datasets","get","then","response","data","updatedStockData","parseFloat","parseInt","label","fill","backgroundColor","borderColor","Error","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/ayush/Desktop/stock dashboard/frontend/src/stock.js"],"sourcesContent":["// src/components/Stock.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\n\nconst Stock = ({ ticker }) => {\n    const [stockData, setStockData] = useState({\n        name: 'Loading...',\n        ticker: '',\n        price: 0,\n        volume: 0\n    });\n    const [chartData, setChartData] = useState({\n        labels: Array.from({ length: 10 }, (_, i) => `Time ${i}`),\n        datasets: []\n    });\n\n    useEffect(() => {\n        axios.get(`http://127.0.0.1:31324/${ticker}`)\n            .then(response => {\n                if (response.data) {\n                    const updatedStockData = {\n                        name: response.data.name || 'N/A',\n                        ticker: ticker,\n                        price: parseFloat(response.data.price) || 0, // Ensure price is a number\n                        volume: parseInt(response.data.volume) || 0 // Ensure volume is an integer\n                    };\n                    setStockData(updatedStockData);\n\n                    const data = {\n                        labels: Array.from({ length: 10 }, (_, i) => `Time ${i}`),\n                        datasets: [\n                            {\n                                label: `Price of ${updatedStockData.name}`,\n                                data: Array.from({ length: 10 }, () => updatedStockData.price),\n                                fill: false,\n                                backgroundColor: 'rgb(75, 192, 192)',\n                                borderColor: 'rgba(75, 192, 192, 0.2)',\n                            },\n                        ],\n                    };\n                    setChartData(data);\n                } else {\n                    throw new Error(\"Invalid data received from API\");\n                }\n            })\n            .catch(error => {\n                console.error('Error fetching stock data:', error);\n                setStockData({\n                    name: 'Error',\n                    ticker: ticker,\n                    price: 0,\n                    volume: 0\n                });\n            });\n    }, [ticker]);\n\n    return (\n        <div className=\"stock-container\">\n            <h2>{stockData.name} ({stockData.ticker})</h2>\n            <p>Price: ${stockData.price.toFixed(2)}</p>\n            <p>Volume: {stockData.volume.toLocaleString()}</p>\n            {chartData.datasets.length > 0 && <Line data={chartData} />}\n        </div>\n    );\n};\n\nexport default Stock;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}